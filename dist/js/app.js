/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.l = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// identity function for calling harmory imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };

/******/ 	// define getter function for harmory exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		Object.defineProperty(exports, name, {
/******/ 			configurable: false,
/******/ 			enumerable: true,
/******/ 			get: getter
/******/ 		});
/******/ 	};

/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};

/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports) {

eval("var container;\r\nvar camera, scene, projector, renderer, mixer;\r\n\r\nvar pablo, aquarium, waterLevel, waterLevelTarget = 1;\r\n\r\nvar spline, counter = 0;\r\nvar pabloIsDead = false;\r\n\r\nvar tangent = new THREE.Vector3();\r\nvar axis = new THREE.Vector3();\r\nvar up = new THREE.Vector3(0, 0, 1);\r\n\r\nvar pastDay = 0;\r\nvar currentDay = 0;\r\n\r\nvar depleteFactor = 0.002;\r\n\r\ninit();\r\nanimate();\r\n\r\nsetWaterLevel(100);\r\n\r\nfunction init() {\r\n\r\n    container = document.createElement( 'div' );\r\n    document.querySelector('#pablo').appendChild( container );\r\n\r\n\r\n    //\r\n\r\n    scene = new THREE.Scene();\r\n\r\n    // Create a camera\r\n    camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 1, 1000 );\r\n    camera.position.z = 100;\r\n\r\n    // Create a directional light and position it like the camera, sort of\r\n    var dirLight = new THREE.DirectionalLight( 0xffffff, 0.6 );\r\n    dirLight.position = camera.position;\r\n    dirLight.rotation = camera.rotation;\r\n    dirLight.position.x += 300;\r\n    dirLight.position.y += 300;\r\n    scene.add(dirLight);\r\n\r\n    // Create an ambient light\r\n    var ambLight = new THREE.AmbientLight( 0xffffff, 0.8 );\r\n    ambLight.position.y = 1000;\r\n    scene.add(ambLight);\r\n\r\n    var loader = new THREE.JSONLoader();\r\n    loader.load( \"../models/pablo-escofish2.json\", function( geometry, materials ) {\r\n        for ( var i = 0; i < materials.length; i ++ ) {\r\n            var m = materials[ i ];\r\n            //m.skinning = true;\r\n            m.morphTargets = true;\r\n            // console.log(m);\r\n        }\r\n        pablo  = new THREE.SkinnedMesh( geometry, new THREE.MeshFaceMaterial( materials ) );\r\n\r\n        // pablo = new THREE.Mesh( geometry, new THREE.MultiMaterials( {\r\n        //     vertexColors: THREE.FaceColors,\r\n        //     morphTargets: true\r\n        // } ) );\r\n        pablo.scale.set( 1, 1, 1 );\r\n        scene.add( pablo );\r\n\r\n        // console.log(scene);\r\n\r\n        mixer = new THREE.AnimationMixer( pablo );\r\n\r\n        var clip = THREE.AnimationClip.CreateFromMorphTargetSequence( 'skeletalAction.001', geometry.morphTargets, 30, false );\r\n        // console.log(clip);\r\n        mixer.clipAction( clip ).setDuration( 2 ).play();\r\n\r\n    } );\r\n\r\n    // Create the water level\r\n    waterLevel = new THREE.Object3D();\r\n    waterLevel.add( new THREE.Mesh(\r\n        new THREE.BoxGeometry(100, 60, 70),\r\n\r\n        new THREE.MeshPhongMaterial( {\r\n            color: 0x156289,\r\n            emissive: 0x072534,\r\n            side: THREE.DoubleSide,\r\n            shading: THREE.FlatShading,\r\n            transparent: true,\r\n            opacity: 0.4\r\n        } )\r\n    ) );\r\n\r\n    // Set it at the bottom of the aquarium\r\n    waterLevel.position.y = -4.99;\r\n\r\n    // Add to scene\r\n    scene.add( waterLevel );\r\n\r\n    // Create the glass aquarium\r\n    aquarium = new THREE.Object3D();\r\n    aquarium.add( new THREE.Mesh(\r\n        new THREE.BoxGeometry(100, 70, 70),\r\n\r\n        new THREE.MeshPhongMaterial( {\r\n            color: 0xE0EAE7,\r\n            // emissive: 0x072534,\r\n            side: THREE.DoubleSide,\r\n            shading: THREE.FlatShading,\r\n            transparent: true,\r\n            opacity: 0.2\r\n        } )\r\n    ) );\r\n\r\n    // Add to scene\r\n    scene.add( aquarium );\r\n\r\n    //\r\n\r\n    var numPoints = 50;\r\n\r\n    spline = new THREE.SplineCurve3([\r\n        new THREE.Vector3(0, 0, 0),\r\n        new THREE.Vector3(20, 0, 20),\r\n        new THREE.Vector3(40, 0, 0),\r\n        new THREE.Vector3(0, 0, -40),\r\n        new THREE.Vector3(-25, 0, 0),\r\n        new THREE.Vector3(-15, 0, 5),\r\n        new THREE.Vector3(-10, 0, -20),\r\n        new THREE.Vector3(0, 0, 0)]);\r\n\r\n    var material = new THREE.LineBasicMaterial({\r\n        color: 0xff00f0,\r\n    });\r\n\r\n    var geometry = new THREE.Geometry();\r\n    var splinePoints = spline.getPoints(numPoints);\r\n\r\n    for (var i = 0; i < splinePoints.length; i++) {\r\n        geometry.vertices.push(splinePoints[i]);\r\n    }\r\n\r\n    // uncomment if we want to show the path\r\n    // line = new THREE.Line(geometry, material);\r\n    // scene.add(line);\r\n\r\n    //\r\n\r\n    renderer = new THREE.WebGLRenderer();\r\n    renderer.setClearColor( 0xf0f0f0 );\r\n    renderer.setPixelRatio( window.devicePixelRatio );\r\n    renderer.setSize( window.innerWidth, window.innerHeight );\r\n    container.appendChild(renderer.domElement);\r\n\r\n    // Render the objects in the scene in the order they were created\r\n    renderer.sortObjects = false;\r\n\r\n    // Create the controls to rotate the aquarium\r\n    var orbit = new THREE.OrbitControls( camera, renderer.domElement );\r\n    orbit.enableZoom = false;\r\n\r\n    // Lock the rotation in x-axis, meaning we can't look above or below the aquarium\r\n    orbit.minPolarAngle = Math.PI / 2; // radians\r\n    orbit.maxPolarAngle = Math.PI / 2; // radians\r\n\r\n    // How far you can orbit horizontally, upper and lower limits.\r\n    // If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\r\n    orbit.minAzimuthAngle = - Math.PI / 2; // radians\r\n    orbit.maxAzimuthAngle = Math.PI / 2; // radians\r\n\r\n    //\r\n\r\n    window.addEventListener( 'resize', onWindowResize, false );\r\n\r\n}\r\n\r\nfunction onWindowResize() {\r\n\r\n    camera.aspect = window.innerWidth / window.innerHeight;\r\n    camera.updateProjectionMatrix();\r\n\r\n    renderer.setSize( window.innerWidth, window.innerHeight );\r\n\r\n}\r\n\r\n//\r\nvar prevTime = Date.now();\r\nfunction animateFish() {\r\n    if (counter <= 1) {\r\n        var splinePoint = spline.getPointAt(counter);\r\n\r\n        splinePoint.y -= depleteFactor * 30;\r\n\r\n\r\n        if(pablo.position.y < -35 && !pabloIsDead){\r\n            pablo.position.y = -35;\r\n            pabloIsDead = true;\r\n            prevTime = Date.now();\r\n        } else if(pabloIsDead) {\r\n            var time = Date.now();\r\n\r\n            // Run the animation when Pablo hits the bottom of the tank\r\n            mixer.update( ( time - prevTime ) * 0.001 );\r\n\r\n            prevTime = time;\r\n        }\r\n        else {\r\n            pablo.position.x = splinePoint.x;\r\n            pablo.position.y = (waterLevel.scale.y * 41) - 35;\r\n            pablo.position.z = splinePoint.z;\r\n\r\n            tangent = spline.getTangentAt(counter).normalize();\r\n\r\n            axis.crossVectors(up, tangent).normalize();\r\n\r\n            var radians = Math.acos(up.dot(tangent));\r\n\r\n            pablo.quaternion.setFromAxisAngle(axis, radians);\r\n        }\r\n\r\n        counter += 0.001\r\n    } else {\r\n        counter = 0;\r\n    }\r\n}\r\n\r\nfunction animate() {\r\n\r\n    requestAnimationFrame( animate );\r\n\r\n    render();\r\n}\r\n\r\n\r\n\r\nfunction calculateWaterLevel( consumption ) {\r\n    var avgConsumption = 160;\r\n    var dConsumption = avgConsumption - consumption;\r\n    var perc = dConsumption / avgConsumption;\r\n\r\n    return(perc);\r\n}\r\n\r\nfunction setWaterLevel( cons ){\r\n    waterLevelTarget += calculateWaterLevel(cons);\r\n    if(waterLevelTarget > 1){\r\n        waterLevelTarget = 1;\r\n    } else if(waterLevelTarget < 0){\r\n        waterLevelTarget = 0;\r\n    }\r\n}\r\n\r\nfunction getLastDayConsumption(){\r\n    // console.log(pastDay, currentDay, user.currentDay, pastDay !== user.currentDay);\r\n    if(user.currentDay !== currentDay){\r\n        currentDay = user.currentDay;\r\n\r\n        if(currentDay -1 < 0){\r\n            pastDay = 6;\r\n        } else{\r\n            pastDay = currentDay -1;\r\n        }\r\n        setWaterLevel(data[pastDay].water);\r\n    }\r\n}\r\n\r\n\r\nfunction render() {\r\n\r\n    animateFish();\r\n\r\n    getLastDayConsumption();\r\n\r\n    if(waterLevel.scale.y > waterLevelTarget && waterLevel.scale.y > 0){\r\n        // If the water isn't already completely depleted, lower the water level\r\n        waterLevel.scale.y -= depleteFactor;\r\n        waterLevel.position.y -= (depleteFactor * 30);\r\n    } else if(waterLevel.scale.y < waterLevelTarget && waterLevel.scale.y <= 1){\r\n        // If the water isn't already completely depleted, lower the water level\r\n        waterLevel.scale.y += depleteFactor;\r\n        waterLevel.position.y += (depleteFactor * 30);\r\n    }else{\r\n        // DO NOTHING\r\n    }\r\n\r\n    renderer.render( scene, camera );\r\n\r\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }
/******/ ]);